==29619== Memcheck, a memory error detector
==29619== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29619== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==29619== Command: ./lab
==29619== Parent PID: 27478
==29619== 
==29619== Invalid read of size 4
==29619==    at 0x400D54: main (main.cpp:165)
==29619==  Address 0x5ad4e04 is 0 bytes after a block of size 4 alloc'd
==29619==    at 0x4C2E216: operator new(unsigned long) (vg_replace_malloc.c:334)
==29619==    by 0x402315: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==29619==    by 0x401DAA: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==29619==    by 0x40190D: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==29619==    by 0x40154E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:185)
==29619==    by 0x4012B6: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:136)
==29619==    by 0x400FEB: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:278)
==29619==    by 0x400CEE: main (main.cpp:160)
==29619== 
==29619== 
==29619== HEAP SUMMARY:
==29619==     in use at exit: 195,584 bytes in 7 blocks
==29619==   total heap usage: 8 allocs, 1 frees, 195,588 bytes allocated
==29619== 
==29619== LEAK SUMMARY:
==29619==    definitely lost: 0 bytes in 0 blocks
==29619==    indirectly lost: 0 bytes in 0 blocks
==29619==      possibly lost: 0 bytes in 0 blocks
==29619==    still reachable: 195,584 bytes in 7 blocks
==29619==         suppressed: 0 bytes in 0 blocks
==29619== Reachable blocks (those to which a pointer was found) are not shown.
==29619== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29619== 
==29619== For counts of detected and suppressed errors, rerun with: -v
==29619== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
